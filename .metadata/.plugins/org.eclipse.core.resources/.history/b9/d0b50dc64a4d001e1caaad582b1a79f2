package sp1;

import java.io.PrintWriter;
import java.net.PasswordAuthentication;
import java.util.Properties;

import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.security.auth.login.LoginException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;

@Controller
public class webpage2 {
	PrintWriter pw = null;
	//spring1.html에 넘어온 값을 view를 통해서 핸들링함
	@PostMapping("/spring1ok.do")
	public String product(HttpServletRequest req , HttpServletResponse res, Model m) {
		String pdcode = "";
		String pdname = "";
		try {
			pdcode = req.getParameter("pdcode").intern();
			pdname = req.getParameter("pdname").intern();
			m.addAttribute("code",pdcode);
			m.addAttribute("name",pdname);
		}
		catch(Exception e) {
			System.out.println("파라미터 오류 발생!!");
		}
		return "/WEB-INF/jsp/spring1ok";
	}
	
	//라디오 사용시 intern사용하여 조건완성
	@PostMapping("/spring2ok.do")
	public String agree(HttpServletRequest req, Model m)  {
		//checkbox 사용시 intern() 사용하지 않음
		String ag = req.getParameter("mail").intern();;
		String ad = req.getParameter("ad").intern();

		if(ad=="N") {
			ag = "N";
		}
		else { 
			ad = req.getParameter("ad").intern();	
		}
		if(ag==null) {
			ag = "N";
			System.out.println("동의안함");
		}
		else {
			System.out.println("동의함");
		}
			return null;
		}
	//getter와 setter를 이용해서 값을 받음
	@PostMapping("/spring3ok.do")
	public String user(HttpServletRequest req, Model m)  {
		String mid = req.getParameter("mid");
		String mname = req.getParameter("name");
		
		userdata ud =new userdata(mid,mname);
		
		System.out.println(ud.getMid());
		System.out.println(ud.getMname());
		return null;
	}
	//실제 메일 서비스 + 네이버 naver.com/nate.com 가능  메일서버 (google은 안됨 (ip는막기 때문), hanmail안됨)
	@PostMapping("/spring4ok.do")
	public String mails(HttpServletRequest req , HttpServletResponse res, Model m) {
		String ename = req.getParameter("ename"); //보낸이 
		String email = req.getParameter("email");  //회신 받을 메일
		String etitle = req.getParameter("etitle"); //제목
		String econ = req.getParameter("econ"); //내용
		
		
		/* 실제 메일 API 서버 정보를 입력*/
		String host = "smtp.naver.com";
		String user = "ox161472@naver.com";
		String password = "";
		String to_mail = "ox161472@naver.com";
		
		
		/*API 포트번호 및 TLS 정보를 입력*/
		Properties props = new Properties();
		props.put("mail.smtp.host",host);
		props.put("mail.smtp.port",587);
		props.put("mail.smtp.auth","true");
		props.put("mail.smtp.debug","true");
		props.put("mail.smtp.socketFactory.port",587);
		props.put("mail.smtp.ssl.protocols","TLSv1.2");
		
		//SMTP 서버에 로그인을 시키기위한 작업(암호화)
		Session session = Session.getDefaultInstance(props,new Authenticator() {
			protected javax.mail.PasswordAuthentication getPasswordAuthentication() {
				return new javax.mail.PasswordAuthentication(user, password);
			}
		});// Session,... (javx.mail)
		try {
			//MimeMessage : okcall 발생함 아이디/패스워드, 포트 모두 맞을 경우
			MimeMessage msg = new MimeMessage(session);
			msg.setFrom(new InternetAddress(email,ename));  //보낸이
			//받는 메일 주소
			msg.addRecipient(Message.RecipientType.TO, new InternetAddress(to_mail));
			msg.setSubject(etitle); //제목
			msg.setText(econ); //내용
			Transport.send(msg); //발송
			System.out.println("메일 발송이 정상적으로 되었습니다.");
		}
		catch(Exception e) {
			System.out.println("메일 서버 통신 오류!!");
		}
		
		return null;
	}
	//Controller에서 배열을 JSP (View)로 출력하는형태
	@GetMapping("/spring5ok.do")
	public String datalist(HttpServletRequest req, Model m) {
		return "/WEB-INF/jsp/spring5ok";
	}
}







